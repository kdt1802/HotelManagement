/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ConnectionManager;
import controller.ServerFileController;
import javax.swing.JOptionPane;
import model.Server;

/**
 *
 * @author TuanTA
 */
public class ServerConfigDialog extends javax.swing.JDialog {

    /**
     * Creates new form ServerConfig
     *
     * @param parent
     * @param modal
     */
    public ServerConfigDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        if (ServerFileController.readFile() != null) {
            Server server = (Server) ServerFileController.readFile();
            txtServer.setText(server.getServer());
            txtServerUser.setText(server.getServerUser());
            txtServerPassword.setText(server.getServerPassword());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbServerUser = new javax.swing.JLabel();
        lbServerPassword = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        txtServerUser = new javax.swing.JTextField();
        txtServerPassword = new javax.swing.JPasswordField();
        lbServer1 = new javax.swing.JLabel();
        btnTestConnect = new javax.swing.JButton();
        lbServer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Server Setting");

        lbServerUser.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbServerUser.setText("Server UserName");

        lbServerPassword.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbServerPassword.setText("Server Password");

        lbServer1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbServer1.setText("SERVER SETTING");

        btnTestConnect.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        btnTestConnect.setText("Test connection");
        btnTestConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectActionPerformed(evt);
            }
        });

        lbServer.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbServer.setText("Server");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbServerUser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServerUser, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtServer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbServerPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTestConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtServerPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(lbServer1)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lbServer1)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbServer)
                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbServerUser)
                    .addComponent(txtServerUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbServerPassword)
                    .addComponent(txtServerPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(btnTestConnect)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectActionPerformed
        String server = txtServer.getText();
        String serverUser = txtServerUser.getText();
        String serverPassword = new String(txtServerPassword.getPassword());
        if (server == null || server.equals("")) {
            JOptionPane.showMessageDialog(this, "Server can not be null", "Warning", JOptionPane.WARNING_MESSAGE);
            txtServer.requestFocus();
        } else if (serverUser == null || txtServerUser.equals("")) {
            JOptionPane.showMessageDialog(this, "Server User name can not be null", "Warning", JOptionPane.WARNING_MESSAGE);
            txtServerUser.requestFocus();
        } else if (txtServerPassword == null || txtServerPassword.equals("")) {
            JOptionPane.showMessageDialog(this, "serverPassword can not be null", "Warning", JOptionPane.WARNING_MESSAGE);
            txtServerPassword.requestFocus();
        } else {
            ConnectionManager connectionManager = new ConnectionManager(new Server(server, serverUser, serverPassword));
            if (ConnectionManager.getConnection() != null) {
                ServerFileController.writeFile(new Server(server, serverUser, serverPassword));
                JOptionPane.showMessageDialog(null, "Connection succeeded", "Notifiaction", 1);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to conect Database!", "Notifiaction", 1);
            }
        }
    }//GEN-LAST:event_btnTestConnectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTestConnect;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbServer;
    private javax.swing.JLabel lbServer1;
    private javax.swing.JLabel lbServerPassword;
    private javax.swing.JLabel lbServerUser;
    private javax.swing.JTextField txtServer;
    private javax.swing.JPasswordField txtServerPassword;
    private javax.swing.JTextField txtServerUser;
    // End of variables declaration//GEN-END:variables
}
