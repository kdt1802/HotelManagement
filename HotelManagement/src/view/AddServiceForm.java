/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ToolCheckInput;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Service;
import model.ServiceBLL;

/**
 *
 * @author Windows 10 Gamer
 */
public class AddServiceForm extends javax.swing.JFrame {

    private static AddServiceForm object;
    private static AddServiceForm object1;
    public static ServiceBLL mServiceBLL = new ServiceBLL();
    private static String selectedServiceName = null;
    Service objServiceUpdate;

    /**
     * Creates new form AddServiceForm
     */
    private AddServiceForm() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private AddServiceForm(Service mService) {
        initComponents();
        setLocationRelativeTo(null);

        txtServiceID.setText("" + mService.getServiceID());
        txtServiceName.setText("" + mService.getServiceName());
        txtServicePrice.setText("" + mService.getServicePrice());
        txtServiceQuantity.setText("" + mService.getServiceQuantity());
        if (mService.getStatus() == 0) {
            cbStatus.setSelectedIndex(0);
        } else {
            cbStatus.setSelectedIndex(1);
        }

        selectedServiceName = mService.getServiceName();
    }

    public static AddServiceForm getObject() {
        if (object == null) {
            object = new AddServiceForm();
        }

        return object;
    }

    public static AddServiceForm getObject1(Service service) {
        if (object1 == null) {
            object1 = new AddServiceForm(service);
        } else {
            object1.dispose();
            object1 = new AddServiceForm(service);
        }

        return object1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtServiceName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtServicePrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtServiceQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtServiceID = new javax.swing.JTextField();
        cbStatus = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add/Update Service");
        setResizable(false);

        jLabel2.setText("Service Name");

        jLabel3.setText("Price");

        jLabel4.setText("Unit in stock");

        jLabel5.setText("Status");

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("CANCEL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel7.setText("Service ID");

        txtServiceID.setEditable(false);

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Out of stock" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServicePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtServiceID, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtServiceName, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(txtServiceQuantity)))
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)
                        .addGap(170, 170, 170))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtServiceName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtServiceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtServiceQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtServicePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (selectedServiceName != null) {
            if (checkInput()) {
                objServiceUpdate = new Service();
                objServiceUpdate.setServiceID(Integer.parseInt(txtServiceID.getText()));
                objServiceUpdate.setServiceName(txtServiceName.getText());
                objServiceUpdate.setServicePrice(Float.parseFloat(txtServicePrice.getText()));
                objServiceUpdate.setServiceQuantity(Integer.parseInt(txtServiceQuantity.getText()));
                objServiceUpdate.setStatus(cbStatus.getSelectedIndex() == 0 ? 0 : 1);

                // mServiceBLL.updateService(objServiceUpdate);
                int check = mServiceBLL.updateService(objServiceUpdate);
                if (check != -1) {
                    JOptionPane.showMessageDialog(this, "Update Successful", "Notification", JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Update Fail", "Notification", JOptionPane.WARNING_MESSAGE);
                }
                ServiceManagePanel.loadData(mServiceBLL.getAllService());
                selectedServiceName = null;
            }
        } else if (checkInput()) {
            Service addService = new Service();
            addService.setServiceName(txtServiceName.getText());
            addService.setServicePrice(Float.parseFloat(txtServicePrice.getText()));
            addService.setServiceQuantity(Integer.parseInt(txtServiceQuantity.getText()));
            addService.setStatus(cbStatus.getSelectedIndex() == 0 ? 0 : 1);

            int check = mServiceBLL.addService(addService);
            if (check != -1) {
                JOptionPane.showMessageDialog(this, "Insert Successful", "Notification", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Insert Fail", "Notification", JOptionPane.WARNING_MESSAGE);
            }
            ServiceManagePanel.loadData(mServiceBLL.getAllService());
            this.dispose();
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    public boolean checkInput() {
        String serviceName = txtServiceName.getText().trim();
        String servicePrice = txtServicePrice.getText().trim();
        String serviceQuantity = txtServiceQuantity.getText().trim();
        boolean isServiceExist = false;

        try {
            if ((selectedServiceName == null || !selectedServiceName.equals(serviceName)) && mServiceBLL.getServiceByName(serviceName).next()) {
                isServiceExist = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddServiceForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (serviceName.isEmpty()) {
            showNotification("Service name can not empty !");
            txtServiceName.requestFocus();
            return false;
        } else if (isServiceExist) {
            showNotification("Service name already exsits !");
            txtServiceName.requestFocus();
            return false;
        } else if (servicePrice.isEmpty()) {
            showNotification("Service price can not empty !");
            txtServicePrice.requestFocus();
            return false;
        } else if (!ToolCheckInput.checkFloat(servicePrice)) {
            showNotification("Service price is incorrect !");
            txtServicePrice.requestFocus();
            return false;
        } else if (serviceQuantity.isEmpty()) {
            showNotification("Service Quantity can not empty !");
            txtServiceQuantity.requestFocus();
            return false;
        } else if (!ToolCheckInput.checkInteger(serviceQuantity)) {
            showNotification("Service Quantity is incorrect !");
            txtServiceQuantity.requestFocus();
            return false;
        }
        return true;
    }

    public void showNotification(String s) {
        JOptionPane.showMessageDialog(this, s, "Notification", JOptionPane.WARNING_MESSAGE);
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int ask = JOptionPane.showConfirmDialog(this, "Cancel?", "Warning", JOptionPane.YES_NO_OPTION);
        if (ask == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtServiceID;
    private javax.swing.JTextField txtServiceName;
    private javax.swing.JTextField txtServicePrice;
    private javax.swing.JTextField txtServiceQuantity;
    // End of variables declaration//GEN-END:variables
}
