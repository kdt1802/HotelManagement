/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BillBLL;
import model.Booking;
import model.BookingBLL;
import model.BookingDetail1;
import model.Client;
import model.PendingRoom;
import model.User;

/**
 *
 * @author sev_user
 */
public class BillDialog extends java.awt.Dialog {

    Booking mBooking;
    Client mclient;
    BillBLL mBillBLL;
    BookingBLL mBookingBLL;
    User mUser;
    ArrayList<PendingRoom> mListRoom;
    ArrayList<BookingDetail1> mListService;
    private static float totalPrice;

    /**
     * Creates new form BillDialog
     *
     * @param parent
     * @param modal
     * @param mUser
     * @param mBooking
     * @param mListRoom
     * @param mListService
     * @param mClient
     */
    public BillDialog(java.awt.Frame parent, boolean modal, User mUser, Booking mBooking, Client mClient, ArrayList<PendingRoom> mListRoom, ArrayList<BookingDetail1> mListService) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        mBillBLL = new BillBLL();
        mBookingBLL = new BookingBLL();
        this.mBooking = mBooking;
        this.mclient = mClient;
        this.mListRoom = mListRoom;
        this.mListService = mListService;
        this.mUser = mUser;

        txtUserName.setText(mUser.getUserName());
        if (mBooking.getStatus() == 2) {
            btnFinish.setEnabled(false);
        }
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtBookingID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBillDate = new javax.swing.JTextField();
        txtClientName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnFinish = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblService = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        txtIDCard = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel2.setBackground(java.awt.SystemColor.controlHighlight);

        jLabel2.setText("Booking ID");

        txtBookingID.setEditable(false);

        jLabel3.setText("Bill Date");

        txtBillDate.setEditable(false);

        txtClientName.setEditable(false);

        jLabel4.setText("Client");

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Room number", "Room type", "Checkin Time", "Checkout Time", "Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblRoom);

        jLabel6.setText("Room detail");

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        jLabel7.setText("Total");

        jLabel8.setText("Service detail");

        tblService.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Service Name", "Price", "Quantity", "Total"
            }
        ));
        jScrollPane2.setViewportView(tblService);

        txtIDCard.setEditable(false);

        jLabel9.setText("ID Card");

        jLabel1.setText("Creator: ");

        txtUserName.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBookingID, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtIDCard, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(288, 288, 288)
                                .addComponent(jLabel6))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(284, 284, 284)
                                .addComponent(jLabel8)))
                        .addGap(0, 118, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                            .addComponent(jSeparator2)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBookingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtIDCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(8, 8, 8)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        boolean canCheckout = true;
        for (PendingRoom pendingRoom : mListRoom) {
            if (pendingRoom.getStatus() != 2) {
                canCheckout = false;
            }
        }

        if (canCheckout) {
            int bookingID = mBooking.getBookingID();
            Date billDate = new Date();
            mBillBLL.addNewBill(mUser.getUserID(), bookingID, billDate);

            //Set booking status to checked-out
            mBookingBLL.checkIn(bookingID, 2);
            // set booking_detail status to returned
            mBookingBLL.freeRoom(bookingID, 2);

            JOptionPane.showMessageDialog(this, "Successfully!! Bill has been exported!!", "warning", JOptionPane.INFORMATION_MESSAGE);

            ReceptionistForm.loadData();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "There be a room(s) not checkout yet!!!", "warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnFinishActionPerformed

    private void loadData() {
        txtBookingID.setText("" + mBooking.getBookingID());
        txtClientName.setText(mclient.getClientName());
        txtIDCard.setText(mclient.getClientIDCard());

        SimpleDateFormat mDateFormat = new SimpleDateFormat("yy/MM/dd HH:mm");
        Date billDate = new Date();
        String billDateString = mDateFormat.format(billDate);
        txtBillDate.setText(billDateString);

        //Load data to table
        DefaultTableModel tblRoomDetailModel = (DefaultTableModel) tblRoom.getModel();
        tblRoomDetailModel.setRowCount(0);

        for (PendingRoom pendingRoom : mListRoom) {
            String checkinString = mDateFormat.format(pendingRoom.getCheckinTime());
            String checkoutString = mDateFormat.format(pendingRoom.getCheckoutTime());

            String roomStatus;
            switch (pendingRoom.getStatus()) {
                case 0:
                    roomStatus = "Booked";
                    break;
                case 1:
                    roomStatus = "Received";
                    break;
                default:
                    roomStatus = "Returned";
                    break;
            }

            String roomType;
            switch (pendingRoom.getRoomType()) {
                case 0:
                    roomType = "Single Room";
                    break;
                case 1:
                    roomType = "Couple Room";
                    break;
                default:
                    roomType = "Dormitory Room";
                    break;
            }
            String[] data = {"" + pendingRoom.getRoomNumber(),
                roomType, checkinString, checkoutString,
                "" + pendingRoom.getTotalprice(), roomStatus
            };

            tblRoomDetailModel.addRow(data);
        }
        tblRoom.setModel(tblRoomDetailModel);

        for (int i = 0; i < tblRoom.getRowCount(); i++) {
            totalPrice += Float.parseFloat(tblRoom.getValueAt(i, 4).toString());
        }
        //Load data to table Service
        DefaultTableModel tblServiceModel = (DefaultTableModel) tblService.getModel();
        tblServiceModel.setRowCount(0);

        mListService.stream().map((pendingService) -> {
            int price = (int) (pendingService.getServicePrice() / pendingService.getServiceQuantity());
            String[] data = {
                pendingService.getServiceName(),
                "" + price,
                "" + pendingService.getServiceQuantity(),
                "" + pendingService.getServicePrice()
            };
            return data;
        }).forEachOrdered((data) -> {
            tblServiceModel.addRow(data);
        });

        tblService.setModel(tblServiceModel);
        for (int i = 0; i < tblService.getRowCount(); i++) {
            totalPrice += Float.parseFloat(tblService.getValueAt(i, 3).toString());
        }

        txtTotalPrice.setText("" + totalPrice);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTable tblService;
    private javax.swing.JTextField txtBillDate;
    private javax.swing.JTextField txtBookingID;
    private javax.swing.JTextField txtClientName;
    private javax.swing.JTextField txtIDCard;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
