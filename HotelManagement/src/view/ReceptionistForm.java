/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Booking;
import model.BookingBLL;
import model.BookingDetail1;
import model.BookingDetail1BLL;
import model.BookingDetailBLL;
import model.Client;
import model.ClientBLL;
import model.PendingRoom;
import model.Room;
import model.RoomBLL;
import model.ServiceBLL;

/**
 *
 * @author Windows 10 Gamer
 */
public class ReceptionistForm extends javax.swing.JFrame {

    LoginForm parent;
    private static ClientBLL mClientBLL;
    private static RoomBLL mRoomBLL;
    private static ServiceBLL mServiceBLL;
    private static BookingBLL mBookingBLL;
    private static BookingDetailBLL mBookingDTBLL;
    private static BookingDetail1BLL mBookingDT1BLL;
    private static int selectedRow = -1;
    private DocumentListener clientNameListener;
    private DocumentListener clientPhoneListener;
    private static Vector origninalTableModel;

    /**
     * Creates new form ReceptionistForm
     *
     * @param parent
     */
    public ReceptionistForm(LoginForm parent) {
        initComponents();
        setLocationRelativeTo(null);

        this.parent = parent;
        mClientBLL = new ClientBLL();
        mRoomBLL = new RoomBLL();
        mServiceBLL = new ServiceBLL();
        mBookingBLL = new BookingBLL();
        mBookingDTBLL = new BookingDetailBLL();
        mBookingDT1BLL = new BookingDetail1BLL();

        lbUserName.setText(parent.mUser.getUserName());
        loadData();
        addDocumentListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBooking = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnCreateBooking = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDeleteBooking = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookingList = new javax.swing.JTable();
        txtClientName = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtPhone = new javax.swing.JTextField();
        cbSearchOnType = new javax.swing.JCheckBox();
        btnChangePass = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        lbUserName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Receptionist");
        setLocationByPlatform(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 691));

        panelBooking.setPreferredSize(new java.awt.Dimension(1200, 691));
        panelBooking.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search Booking");
        panelBooking.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, 30));

        btnCreateBooking.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCreateBooking.setText("New Booking");
        btnCreateBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateBookingActionPerformed(evt);
            }
        });
        panelBooking.add(btnCreateBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 231, 150, 60));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        panelBooking.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 180, -1, 30));

        btnDeleteBooking.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDeleteBooking.setText("Delete Booking");
        btnDeleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookingActionPerformed(evt);
            }
        });
        panelBooking.add(btnDeleteBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 150, 60));

        tblBookingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Client ID", "Client Name", "Client Phone", "Booking Time", "Estimate Price", "Status"
            }
        ));
        tblBookingList.setRowHeight(22);
        jScrollPane1.setViewportView(tblBookingList);

        panelBooking.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 224, 1230, 570));

        txtClientName.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtClientName.setText("Client Name");
        txtClientName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtClientNameFocusLost(evt);
            }
        });
        txtClientName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClientNameMouseClicked(evt);
            }
        });
        txtClientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientNameActionPerformed(evt);
            }
        });
        panelBooking.add(txtClientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 160, 30));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnUpdate.setText("Detail");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelBooking.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 150, 60));

        txtPhone.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtPhone.setText("Client Phone");
        txtPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhoneFocusLost(evt);
            }
        });
        txtPhone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPhoneMouseClicked(evt);
            }
        });
        panelBooking.add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, 160, 30));

        cbSearchOnType.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        cbSearchOnType.setText("Search on type");
        cbSearchOnType.setIconTextGap(10);
        panelBooking.add(cbSearchOnType, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 180, -1, 30));

        btnChangePass.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnChangePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/icon/if_engineering__gear__setting__process__2568275 (1).png"))); // NOI18N
        btnChangePass.setText("Setting");
        btnChangePass.setIconTextGap(10);
        btnChangePass.setMargin(new java.awt.Insets(2, 5, 2, 22));
        btnChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePassActionPerformed(evt);
            }
        });
        panelBooking.add(btnChangePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 20, 120, 30));

        btnLogout.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/icon/if_Erase_32464.png"))); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.setIconTextGap(10);
        btnLogout.setMargin(new java.awt.Insets(2, 5, 2, 20));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        panelBooking.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 60, 120, 30));

        jLabel1.setFont(new java.awt.Font("Informal011 BT", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Welcome");
        panelBooking.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 110, -1));
        panelBooking.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 1470, 10));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Hotel Management System");
        panelBooking.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 490, -1));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/icon/if_User_Administrator_1_1218724.png"))); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        panelBooking.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, -1, 110));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelBooking.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 150, 60));

        lbUserName.setFont(new java.awt.Font("Informal011 BT", 3, 18)); // NOI18N
        lbUserName.setForeground(new java.awt.Color(0, 255, 0));
        lbUserName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbUserName.setText("Receptionist");
        panelBooking.add(lbUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 160, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/picture/dark-blue-background-hd.jpg"))); // NOI18N
        panelBooking.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 830));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 1481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 829, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePassActionPerformed
        ChangePasswordForm.getObject("ReceptionistForm", parent.mUser).setVisible(true);
    }//GEN-LAST:event_btnChangePassActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int ask = JOptionPane.showConfirmDialog(this, "Do you want to logout?", "Warning", JOptionPane.YES_NO_OPTION);
        if (ask == JOptionPane.YES_OPTION) {
            parent.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        selectedRow = tblBookingList.getSelectedRow();

        if (selectedRow == -1 || tblBookingList.getValueAt(selectedRow, 0) == null) {
            JOptionPane.showMessageDialog(this, "Select booking to update!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Client mClient = new Client();
            ArrayList<PendingRoom> mListRoom = new ArrayList<>();
            ArrayList<BookingDetail1> mListService = new ArrayList<>();

            GetBookingDetail(mClient, mListRoom, mListService);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookingActionPerformed
        selectedRow = tblBookingList.getSelectedRow();

        if (selectedRow == -1 || tblBookingList.getValueAt(selectedRow, 0) == null) {
            JOptionPane.showMessageDialog(this, "Select booking to delete!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String status = tblBookingList.getValueAt(selectedRow, 6).toString();

            if (status.equals("Checked-out")) {
                JOptionPane.showMessageDialog(this, "Checked-out, bill has been exported!! Can not delete!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (status.equals("Checked-in")) {
                JOptionPane.showMessageDialog(this, "Already Checked-in! Can not delete!!", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (status.equals("Not checkin yet")) {
                JOptionPane.showMessageDialog(this, "Already booked!! Do not delete", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                int ask = JOptionPane.showConfirmDialog(this, "Do you really want to delete this booking?", "Warning", JOptionPane.YES_NO_OPTION);
                if (ask == JOptionPane.YES_OPTION) {
                    //Delete data from 4 tables BOOKING_DETAIL,BOOKING_DETAIL_1, BOOKING and CLIENT
                    int bookingID = Integer.parseInt(tblBookingList.getValueAt(selectedRow, 0).toString());
                    int clientID = Integer.parseInt(tblBookingList.getValueAt(selectedRow, 1).toString());

                    mBookingDTBLL.deleteBookingDetailByID(bookingID);
                    mBookingDT1BLL.deleteBookingDetail_1_ByID(bookingID);
                    mBookingBLL.deleteBookingByID(bookingID);
                    mClientBLL.deleteByID(clientID);

                    loadData();
                }
            }
        }
    }//GEN-LAST:event_btnDeleteBookingActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        DefaultTableModel tblBookingModel = (DefaultTableModel) tblBookingList.getModel();
        tblBookingModel.setRowCount(0);
        String clientName = txtClientName.getText();
        String clientPhone = txtPhone.getText();

        for (Object rows : origninalTableModel) {
            Vector rowVector = (Vector) rows;
            if (rowVector.get(2).toString().contains(clientName) && rowVector.get(3).toString().contains(clientPhone)) {
                tblBookingModel.addRow(rowVector);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCreateBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateBookingActionPerformed
//        BookingForm.getObject().setVisible(true);
        BookingDialog bookingDialog = new BookingDialog(new javax.swing.JFrame("Booking Form"), true);
        bookingDialog.setTitle("Booking Form");
        bookingDialog.setVisible(true);
    }//GEN-LAST:event_btnCreateBookingActionPerformed

    private void txtClientNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtClientNameMouseClicked
        if (cbSearchOnType.isSelected()) {
            txtClientName.getDocument().addDocumentListener(clientNameListener);
        }
        txtClientName.selectAll();
    }//GEN-LAST:event_txtClientNameMouseClicked

    private void txtPhoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPhoneMouseClicked
        if (cbSearchOnType.isSelected()) {
            txtPhone.getDocument().addDocumentListener(clientPhoneListener);
        }
        txtPhone.selectAll();
    }//GEN-LAST:event_txtPhoneMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        selectedRow = tblBookingList.getSelectedRow();

        if (selectedRow == -1 || tblBookingList.getValueAt(selectedRow, 0) == null) {
            JOptionPane.showMessageDialog(this, "Select booking to cancel!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            String status = tblBookingList.getValueAt(selectedRow, 6).toString();
            if (status.equals("Not checkin yet")) {
                int ask = JOptionPane.showConfirmDialog(this, "Do you really want to cancel this booking?", "Warning", JOptionPane.YES_NO_OPTION);
                if (ask == JOptionPane.YES_OPTION) {
                    int bookingID = Integer.parseInt(tblBookingList.getValueAt(selectedRow, 0).toString());

                    //UPdate status for BOOKING, BOOKING_DETAIL, BOOKING_DETAIL_1
                    mBookingBLL.cancelBooking(bookingID);

                    // Update list service (service unit = service unit + canceled service unit):
                    ResultSet rs = mBookingDT1BLL.getBookingDetail_1_ByID(bookingID);
                    try {
                        while (rs.next()) {
                            ResultSet rs1 = mServiceBLL.getServiceByName(rs.getString(3));
                            while (rs1.next()) {
                                mServiceBLL.updateService(rs1.getInt(1), rs1.getInt(4) + rs.getInt(4), 0);
                            }
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(ReceptionistForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    loadData();
                }
            } else if (status.equals("Canceled")) {
                JOptionPane.showMessageDialog(this, "Already canceled", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (status.equals("Checked-in")) {
                JOptionPane.showMessageDialog(this, "Already checked-in", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Already checked-out", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtClientNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClientNameFocusLost
        txtClientName.getDocument().removeDocumentListener(clientNameListener);
        if (txtClientName.getText().equals("")) {
            txtClientName.setText("client name");
        }
    }//GEN-LAST:event_txtClientNameFocusLost

    private void txtPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhoneFocusLost
        txtPhone.getDocument().removeDocumentListener(clientPhoneListener);
        if (txtPhone.getText().equals("")) {
            txtPhone.setText("client phone");
        }
    }//GEN-LAST:event_txtPhoneFocusLost

    private void txtClientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientNameActionPerformed

    public static void loadData() {
        DefaultTableModel tblRoomListModel = (DefaultTableModel) tblBookingList.getModel();
        tblRoomListModel.setRowCount(0);

        ResultSet rs = mBookingBLL.getAllBooking();

        try {
            while (rs.next()) {
                String clientName = mClientBLL.getNameById(rs.getInt(2));
                String clientPhone = mClientBLL.getPhoneByID(rs.getInt(2));

                String status;
                switch (rs.getInt(6)) {
                    case 0:
                        status = "Not checkin yet";
                        break;
                    case 1:
                        status = "Checked-in";
                        break;
                    case 2:
                        status = "Checked-out";
                        break;
                    default:
                        status = "Canceled";
                        break;
                }

                DecimalFormat df = new DecimalFormat("#.##");
                DateFormat mDateFormat = new SimpleDateFormat("dd/MM/YYYY HH:mm");
                Object[] data = {
                    rs.getInt(1),
                    rs.getInt(2),
                    clientName,
                    clientPhone,
                    mDateFormat.format(rs.getTimestamp(4)),
                    df.format(rs.getFloat(5)),
                    status
                };

                tblRoomListModel.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReceptionistForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        tblBookingList.setModel(tblRoomListModel);

        origninalTableModel = (Vector) ((DefaultTableModel) tblBookingList.getModel()).getDataVector().clone();
    }

    private void GetBookingDetail(Client mClient, ArrayList<PendingRoom> mListRoom, ArrayList<BookingDetail1> mListService) {
        mClient = mClientBLL.getClientById(Integer.parseInt(tblBookingList.getValueAt(selectedRow, 1).toString()));

        int bookingID = Integer.parseInt(tblBookingList.getValueAt(selectedRow, 0).toString());
        Booking mBooking = new Booking();

        ResultSet rs1 = mBookingBLL.getBookingByID(bookingID);
        try {
            while (rs1.next()) {
                mBooking.setBookingID(bookingID);
                mBooking.setClientID(rs1.getInt(2));
                mBooking.setNote(rs1.getString(3));
                mBooking.setBookingTime(rs1.getDate(4));
                mBooking.setEstimatePrice(rs1.getFloat(5));
                mBooking.setStatus(rs1.getInt(6));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReceptionistForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet rs2 = mBookingDTBLL.getBookingDetailByID(bookingID);
        try {
            while (rs2.next()) {
                PendingRoom mPendingRoom = new PendingRoom();
                Room mRoom = mRoomBLL.getRoomByID(rs2.getInt(2));

                mPendingRoom.setRoomID(rs2.getInt(2));
                mPendingRoom.setRoomType(mRoom.getRoomType());
                mPendingRoom.setRoomNumber(mRoom.getRoomNumber());

                mPendingRoom.setCheckinTime((rs2.getTimestamp(4)));
                mPendingRoom.setCheckoutTime(rs2.getTimestamp(5));

                mPendingRoom.setNightPrice(mRoom.getNightPrice());
                mPendingRoom.setHourPrice(mRoom.getHourPrice());

                float price;
                long stayTime = rs2.getDate(5).getTime() - rs2.getDate(4).getTime();
                long stayInHour = stayTime / (60 * 60 * 1000) % 24;
                long stayInDay = stayTime / (24 * 60 * 60 * 1000);
                price = mRoom.getNightPrice() * stayInDay + mRoom.getHourPrice() * stayInHour;
                mPendingRoom.setTotalprice(price);

                mPendingRoom.setStatus(rs2.getInt(6));

                mListRoom.add(mPendingRoom);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReceptionistForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet rs3 = mBookingDT1BLL.getBookingDetail_1_ByID(bookingID);
        try {
            while (rs3.next()) {
                BookingDetail1 mPendingService = new BookingDetail1();

                mPendingService.setBookingID(rs3.getInt(1));
                mPendingService.setServiceID(rs3.getInt(2));
                mPendingService.setServiceName(rs3.getString(3));
                mPendingService.setServiceQuantity(rs3.getInt(4));
                mPendingService.setServicePrice(rs3.getFloat(5));

                mListService.add(mPendingService);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ReceptionistForm.class.getName()).log(Level.SEVERE, null, ex);
        }

//        BookingForm.getObject1("receptionist", parent.mUser, mBooking, mClient, mListRoom, mListService).setVisible(true);
        BookingDialog bookingDialog = new BookingDialog(new javax.swing.JFrame(), true, "Receptionist", parent.mUser, mBooking, mClient, mListRoom, mListService);
        bookingDialog.setTitle("Booking Detail");
        bookingDialog.setVisible(true);
    }

    private void addDocumentListener() {
        clientNameListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                search();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                search();
            }

            private void search() {
                searchByName(txtClientName.getText());
            }
        };

        clientPhoneListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                search2();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search2();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                search2();
            }

            private void search2() {
                searchByPhone(txtPhone.getText());
            }
        };

        cbSearchOnType.setSelected(true);
    }

    private void searchByName(String searchString) {
        DefaultTableModel tblBookingModel = (DefaultTableModel) tblBookingList.getModel();
        tblBookingModel.setRowCount(0);

        for (Object rows : origninalTableModel) {
            Vector rowVector = (Vector) rows;
            if (rowVector.get(2).toString().contains(searchString)) {
                tblBookingModel.addRow(rowVector);
            }
        }
    }

    private void searchByPhone(String phoneNumber) {
        DefaultTableModel tblBookingModel = (DefaultTableModel) tblBookingList.getModel();
        tblBookingModel.setRowCount(0);

        for (Object rows : origninalTableModel) {
            Vector rowVector = (Vector) rows;
            if (rowVector.get(3).toString().contains(phoneNumber)) {
                tblBookingModel.addRow(rowVector);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChangePass;
    private javax.swing.JButton btnCreateBooking;
    private javax.swing.JButton btnDeleteBooking;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private static javax.swing.JCheckBox cbSearchOnType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbUserName;
    private javax.swing.JPanel panelBooking;
    private static javax.swing.JTable tblBookingList;
    private javax.swing.JTextField txtClientName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
