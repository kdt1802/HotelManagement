/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Room;
import model.RoomBLL;

/**
 *
 * @author Windows 10 Gamer
 */
public class RoomManagePanel extends javax.swing.JPanel {

    public static RoomBLL mRoomBLL = new RoomBLL();
    public static Room mRoom;
    // public static ResultSet mRs;
    private static int selectedRoomID = 0; // default = 0: not selected any row
    private static int selectedRow = -1;

    /**
     * Creates new form RoomManagePanel
     */
    public RoomManagePanel() {
        initComponents();
        loadData(mRoomBLL.getAllRoom());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddRoom = new javax.swing.JButton();
        btnUpdateRoom = new javax.swing.JButton();
        btnDeleteRoom = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoomList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbRoomType = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1190, 640));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAddRoom.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnAddRoom.setText("Add Room");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });
        add(btnAddRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 570, 120, 50));

        btnUpdateRoom.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnUpdateRoom.setText("Update Room");
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });
        add(btnUpdateRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 570, 140, 50));

        btnDeleteRoom.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDeleteRoom.setText("Delete Room");
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoomActionPerformed(evt);
            }
        });
        add(btnDeleteRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 570, 130, 50));

        tblRoomList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Room ID", "Room Type", "Room Number", "Night Price", "Hour Price", "Status"
            }
        ));
        tblRoomList.setRowHeight(22);
        jScrollPane1.setViewportView(tblRoomList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 97, 1112, 456));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Search Room");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 140, 30));

        cbRoomType.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single Room", "Couple Room", "Domitory Room", "All Room" }));
        cbRoomType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbRoomTypeItemStateChanged(evt);
            }
        });
        cbRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRoomTypeActionPerformed(evt);
            }
        });
        add(cbRoomType, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        AddRoomForm.getObject().setVisible(true);
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        mRoom = new Room();
        selectedRow = tblRoomList.getSelectedRow();

        if (selectedRow == -1 || tblRoomList.getValueAt(selectedRow, 0) == null) {
            JOptionPane.showMessageDialog(this, "select room to update!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int roomID = Integer.parseInt(tblRoomList.getValueAt(selectedRow, 0).toString());
//            if (mRoomBLL.isRoomUsing(roomID) > 0) {
//                JOptionPane.showMessageDialog(this, "This room is existing in some bookings!!", "warning", JOptionPane.WARNING_MESSAGE);
//            } else {
            mRoom.setRoomID(roomID);

            String roomType = tblRoomList.getValueAt(selectedRow, 1).toString();
            if (roomType.equals("Single Room")) {
                mRoom.setRoomType(0);
            } else if (roomType.equals("Couple Room")) {
                mRoom.setRoomType(1);
            } else {
                mRoom.setRoomType(2);
            }

            mRoom.setRoomNumber(Integer.parseInt((String) tblRoomList.getValueAt(selectedRow, 2)));
            mRoom.setNightPrice(Float.parseFloat((String) tblRoomList.getValueAt(selectedRow, 3)));
            mRoom.setHourPrice(Float.parseFloat((String) tblRoomList.getValueAt(selectedRow, 4)));

            String status = tblRoomList.getValueAt(selectedRow, 5).toString();
            if (status.equals("Available")) {
                mRoom.setStatus(0);
            } else {
                mRoom.setStatus(1);
            }
            AddRoomForm.getObject1(mRoom).setVisible(true);
//            }
        }
    }//GEN-LAST:event_btnUpdateRoomActionPerformed

    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoomActionPerformed
        selectedRow = tblRoomList.getSelectedRow();
        if (selectedRow == -1 || tblRoomList.getValueAt(selectedRow, 0) == null) {
            JOptionPane.showMessageDialog(this, "select room to delete!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int roomID = Integer.parseInt(tblRoomList.getValueAt(selectedRow, 0).toString());
            if (mRoomBLL.canDeleteRoom(roomID) > 0) {
                JOptionPane.showMessageDialog(this, "Can not delete!!!This room is existing in some bookings!!", "warning", JOptionPane.WARNING_MESSAGE);
            } else {
                int ask = JOptionPane.showConfirmDialog(this, "Do you really want to delete this room?", "Warning", JOptionPane.YES_NO_OPTION);
                if (ask == JOptionPane.YES_OPTION) {
                    selectedRoomID = Integer.parseInt((String) tblRoomList.getValueAt(selectedRow, 0));
                    mRoomBLL.deleteRoom(selectedRoomID);
                    loadData(mRoomBLL.getAllRoom());
                }
            }
        }
    }//GEN-LAST:event_btnDeleteRoomActionPerformed

    private void cbRoomTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbRoomTypeItemStateChanged
        int roomType = cbRoomType.getSelectedIndex();
        if (roomType < 3) {
            loadData(mRoomBLL.getRoomByType(cbRoomType.getSelectedIndex()));
        } else {
            loadData(mRoomBLL.getAllRoom());
        }
    }//GEN-LAST:event_cbRoomTypeItemStateChanged

    private void cbRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbRoomTypeActionPerformed

    public static void loadData(ResultSet mRs) {
        DefaultTableModel tblRoomListModel = (DefaultTableModel) tblRoomList.getModel();
        tblRoomListModel.setRowCount(0);
        try {
            while (mRs.next()) {
                String roomType = "";
                switch (mRs.getInt(2)) {
                    case 0:
                        roomType = "Single Room";
                        break;
                    case 1:
                        roomType = "Couple Room";
                        break;
                    default:
                        roomType = "Domitory Room";
                        break;
                }

                String status = "";
                if (mRs.getInt(6) == 0) {
                    status = "Available";
                } else {
                    status = "Maintaining";
                }

                String[] data = {mRs.getString("roomID"), roomType, mRs.getString("roomNumber"),
                    mRs.getString("nightPrice"), mRs.getString("hourPrice"), status};
                tblRoomListModel.addRow(data);
            }

            tblRoomList.setModel(tblRoomListModel);
        } catch (SQLException ex) {
            Logger.getLogger(RoomManagePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JComboBox<String> cbRoomType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tblRoomList;
    // End of variables declaration//GEN-END:variables
}
